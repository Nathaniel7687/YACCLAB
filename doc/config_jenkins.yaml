%YAML:1.2
---
##########################################
# THIS IS THE YACCLAB CONFIGURATION FILE #
##########################################

# -------------------- #
#   Benchmark Tests    #
# -------------------- #


CPU 2D 8-way connectivity:

  execute: false
  
  # Tests to perform and their number of repetitions
  # ------------------------------------------------
  
  perform: 
    correctness:        true
    average:            true
    average_with_steps: false
    density:            false
    granularity:        true
    memory:             false
    
  correctness_tests: 
    eight_connectivity_standard: true
    eight_connectivity_steps:    true
    eight_connectivity_memory:   false
  
  tests_number: 
    average:             10 
    average_with_steps:  10
    density:             10
    granularity:         10
  
  # List of 2D CPU CCL algorithms to test
  # -------------------------------------
  
  algorithms: 
  #  - SAUF_RemSP
  #  - SAUF_TTA
    - SAUF_UFPC
  #  - SAUF_UF
  #  - BBDT_RemSP
  #  - BBDT_TTA
    - BBDT_UFPC
  #  - BBDT_UF
  #  - CCIT_RemSP
  #  - CCIT_TTA
  #  - CCIT_UFPC
  #  - CCIT_UF
  #  - CTB_RemSP
  #  - CTB_TTA
  #  - CTB_UFPC
  #  - CTB_UF
  #  - PRED_RemSP
  #  - PRED_TTA
    - PRED_UFPC
  #  - PRED_UF
  #  - DRAG_RemSP
  #  - DRAG_TTA
    - DRAG_UFPC
  #  - DRAG_UF
  #  - Spaghetti_RemSP
  #  - Spaghetti_TTA
    - Spaghetti_UFPC
  #  - Spaghetti_UF
  #  - LSL_STD_TTA
  #  - LSL_STD_UF
  #  - LSL_STDZ_TTA
  #  - LSL_STDZ_UF
  #  - LSL_RLE_TTA
  #  - LSL_RLE_UF
  #  - LSL_RLEZ_TTA
  #  - LSL_RLEZ_UF
  #  - DiStefano
  #  - CT
  #  - SBLA
  #  - labeling_NULL
  
  # Algorithms which require to specify a labels solver are: SAUF, BBDT, CCIT, LSL, CTB, PRED, DRAG and Spaghetti
  # Possible labels solvers are: UF, UFPC, RemSP, TTA
  # LSL requires also a version specifier: STD, STDZ, RLE, RLEZ; only UF and TTA solvers can be used with LSL
  # Algorithms which don't require to specify a labels solver are: DiStefano, CT, SBLA, NULL
  
  # Datasets to use for each test
  # -----------------------------
  
  # Note that perform correctness tests on labeling_NULL algorithm does not make sense
  check_datasets: ["check", "3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
    
  # List of datasets on which "Average Runtime Tests" shall be run
  average_datasets: ["3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
    
  # List of datasets on which "Average Runtime Tests With Steps" shall be run
  average_datasets_with_steps: ["3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
  
  # List of datasets on which "Memory Tests" shall be run
  memory_datasets: ["3dpes", "fingerprints", "hamlet", "medical", "mirflickr", "tobacco800", "xdocs"]
    
  # Save the results of each run test
  save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}

  
GPU 2D 8-way connectivity:
   
  execute: true
  
  #  Tests to perform and their number of repetitions
  # -------------------------------------------------
  
  perform: 
    correctness:        true
    average:            true
    average_with_steps: false
    density:            false
    granularity:        false
    memory:             false
  
  correctness_tests: 
    eight_connectivity_standard: true
    eight_connectivity_steps:    true
    eight_connectivity_memory:   false
   
  tests_number: 
    average:             1
    average_with_steps:  10
    density:             10
    granularity:         10
  
  # List of 2D GPU CCL algorithms to test
  # -------------------------------------
  
  algorithms:
    - BUF
    - BKE
    - BE
    - UF
    - OLE
    - LBUF
    - KE
    - DLP

  
  # Datasets to use for each test
  # -----------------------------
  
  # Note that perform correctness tests on labeling_NULL algorithm does not make sense
  check_datasets: ["check", "fingerprints"]
    
  # List of datasets on which "Average Runtime Tests" shall be run
  average_datasets: ["fingerprints", "hamlet", "medical"]
    
  # List of datasets on which "Average Runtime Tests With Steps" shall be run
  average_datasets_with_steps: []
    
  # List of datasets on which "Memory Tests" shall be run
  memory_datasets: []
    
  # Save the results of each run test
  save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}

CPU 3D 26-way connectivity:
  
  execute: true
  
  # Tests to perform and their number of repetitions
  # ------------------------------------------------
  
  perform: 
    correctness:        true
    average:            true
    average_with_steps: false
    density:            false
    granularity:        false
    memory:             false
  
  correctness_tests: 
    eight_connectivity_standard: true
    eight_connectivity_steps:    false
    eight_connectivity_memory:   false
  
  tests_number: 
    average:            1
    average_with_steps: 10
    density:            10
    granularity:        10 
  
  # List of 3D CPU CCL algorithms to test
  # -------------------------------------
  
  algorithms: 
  #  - naive_3D_UF
    - naive_3D_UFPC
  #  - naive_3D_TTA
  #  - naive_3D_RemSP
  
    
  # Datasets to use for each test
  # -----------------------------
  
  # Note that perform correctness tests on labeling_NULL algorithm does not make sense
  check_datasets: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Average Runtime Tests" shall be run
  average_datasets: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Average Runtime Tests With Steps" shall be run
  average_datasets_with_steps: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Memory Tests" shall be run
  memory_datasets: ["hilbert", "mitochondria"]

  # Save the results of each run test
  save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}



GPU 3D 26-way connectivity:

  execute: true
  
  # Tests to perform and their number of repetitions
  # ------------------------------------------------
  
  perform: 
    correctness:        true
    average:            true
    average_with_steps: false
    density:            false
    granularity:        false
    memory:             false
  
  correctness_tests: 
    eight_connectivity_standard: true
    eight_connectivity_steps:    false
    eight_connectivity_memory:   false
  
  tests_number: 
    average:             1 
    average_with_steps:  10
    density:             10
    granularity:         10 
  
  # List of 3D CPU CCL algorithms to test
  # -------------------------------------
  
  algorithms:
    - BUF_3D
    - BKE_3D
    - BE_3D
    - UF_3D
  
  # Datasets to use for each test
  # -----------------------------
  
  # Note that perform correctness tests on labeling_NULL algorithm does not make sense
  check_datasets: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Average Runtime Tests" shall be run
  average_datasets: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Average Runtime Tests With Steps" shall be run
  average_datasets_with_steps: ["hilbert", "mitochondria"]
  
  # List of datasets on which "Memory Tests" shall be run
  memory_datasets: ["hilbert", "mitochondria"]

  # Save the results of each run test
  save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}

# -------------------- #
# Additional utilities #
# -------------------- #

# Directory for input/output paths
paths: {input: "${YACCLAB_INPUT_DATASET_PATH}", output: "${YACCLAB_OUTPUT_RESULTS_PATH}"}

# Save the returned number of components in output files
write_n_labels: false

# Save labeled image (TODO: remove this option from tests and add a specific tools for doing that in YACCLAB) 
color_labels: {average: false, density: false} #TODO

os: "${YACCLAB_OS}"

##########################################
# This is the YACCLAB configuration file #
##########################################
