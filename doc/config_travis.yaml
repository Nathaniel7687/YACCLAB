%YAML:1.2
---
# This is YACCLAB configuration file
# Important notes:
#	- the escape character in gnuplot is '\\' and it is correctly handled by YACCLAB
#	- for some algorithms YACCLAB contains both optimized (OPT) and readable version;
#		you should use optimized version for tests.

# -------------------------------------------------------------------------------------
# Tests to perform and their number of repetitions
# -------------------------------------------------------------------------------------

# Kind of tests to execute
perform: 
  correctness:        true
  average:            true
  average_with_steps: false
  density:            false
  granularity:        false
  memory:             false

correctness_tests: 
  eight_connectivity_standard: true
  eight_connectivity_steps:    true
  eight_connectivity_memory:   true

# Number of tests repetitions 
tests_number: 
  average:            1 
  average_with_steps: 1
  density:            1
  granularity:        1 

# -------------------------------------------------------------------------------------
# List of CCL algorithms to test
# -------------------------------------------------------------------------------------

algorithms: 
  - SAUF_RemSP
#  - SAUF_TTA
#  - SAUF_UFPC
#  - SAUF_UF
#  - BBDT_RemSP
#  - BBDT_TTA
#  - BBDT_UFPC
#  - BBDT_UF
#  - CCIT_RemSP
#  - CCIT_TTA
#  - CCIT_UFPC
#  - CCIT_UF
#  - CTB_RemSP
#  - CTB_TTA
#  - CTB_UFPC
#  - CTB_UF
#  - PRED_RemSP
#  - PRED_TTA
#  - PRED_UFPC
#  - PRED_UF
#  - LSL_STD_TTA
#  - LSL_STD_UF
#  - LSL_STDZ_TTA
#  - LSL_STDZ_UF
#  - LSL_RLE_TTA
#  - LSL_RLE_UF
#  - LSL_RLEZ_TTA
#  - LSL_RLEZ_UF
#  - DiStefano
#  - CT
#  - SBLA
#  - labeling_NULL

# Algorithms which require to specify a labels solver are: SAUF, BBDT, CCIT, LSL, CTB, PRED
# Possible labels solvers are: UF, UFPC, RemSP, TTA
# LSL requires also a version specifier: STD, STDZ, RLE, RLEZ; only UF and TTA solvers can be used with LSL
# Algorithms which don't require to specify a labels solver are: DiStefano, CT, SBLA, NULL

# -------------------------------------------------------------------------------------
# Datasets to use for each test
# -------------------------------------------------------------------------------------

# Note that perform correctness tests on labeling_NULL algorithm does not make sense
check_datasets: ["check", "fingerprints"]

# List of datasets on which "Average Runtime Tests" shall be run
average_datasets: ["fingerprints", "hamlet", "medical"]

# List of datasets on which "Average Runtime Tests With Steps" shall be run
average_datasets_with_steps: []

# List of datasets on which "Granularity Tests" shall be run (NOTE TODO)
granularity_datasets: []

# List of datasets on which "Memory Tests" shall be run
memory_datasets: []

# -------------------------------------------------------------------------------------
# Additional utilities
# -------------------------------------------------------------------------------------

# Directory for input/output paths
paths: {input: "input", output: "output"}

# Save the returned number of components in output files
write_n_labels: false

# Save labeled image
color_labels: {average: false, density: false} #TODO

# Save the results of each run test
save_middle_tests: {average: false, average_with_steps: false, density: false, granularity: false}

os: "${YACCLAB_OS}"

# This is YACCLAB configuration file
